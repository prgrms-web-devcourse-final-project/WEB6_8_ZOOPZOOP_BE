# 워크플로우 이름
name: Spring CI develop

# 워크플로우 실행 조건
on:
  pull_request:
    branches:
      - develop # develop 브랜치에서 CI 검증이 완료된 후에 main 브랜치로 머지되기 때문에 main 브랜치에서는 CI를 실행하지 않음
    paths:
      - 'src/**'
      - 'build.gradle*'
      - 'settings.gradle*'
      - 'gradle/**'
      - 'Dockerfile'
      - '.github/workflows/**'

jobs:
  # ==================================
  # CI Job : Test and Build and Push Docker Image
  # ==================================
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v4

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. Gradle 캐시 설정
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 5. Gradle 테스트 실행
      - name: Test with Gradle
        run: ./gradlew test

      # 6. Gradle 빌드 실행 (테스트 성공 시)
      - name: Build with Gradle
        run: ./gradlew build

      # 7. GHCR 로그인
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 8. Docker 이미지 빌드 & 푸시
      - name: Build & Push Docker Image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/myapp
          
          docker build -t $IMAGE_NAME:${GITHUB_SHA} . 
          docker tag $IMAGE_NAME:${GITHUB_SHA} $IMAGE_NAME:latest
          
          docker push $IMAGE_NAME:${GITHUB_SHA}
          docker push $IMAGE_NAME:latest
